name: Build and Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: azst-linux-x86_64

          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            name: azst-linux-x86_64-musl

          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            name: azst-linux-aarch64

          - target: x86_64-apple-darwin
            os: macos-latest
            name: azst-macos-x86_64

          - target: aarch64-apple-darwin
            os: macos-latest
            name: azst-macos-aarch64

          - target: x86_64-pc-windows-msvc
            os: windows-latest
            name: azst-windows-x86_64.exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Install cross (Linux only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          cargo install cross --git https://github.com/cross-rs/cross

      - name: Build (Linux with cross)
        if: matrix.os == 'ubuntu-latest'
        run: |
          cross build --release --target ${{ matrix.target }}

      - name: Build (macOS/Windows)
        if: matrix.os != 'ubuntu-latest'
        run: |
          cargo build --release --target ${{ matrix.target }}

      - name: Strip binary (Linux/macOS)
        if: matrix.os != 'windows-latest'
        run: |
          strip target/${{ matrix.target }}/release/azst || true

      - name: Create archive (Linux/macOS)
        if: matrix.os != 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          tar czf ../../../${{ matrix.name }}.tar.gz azst
          cd -

      - name: Create archive (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          7z a ../../../${{ matrix.name }}.zip azst.exe
          cd -

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: |
            ${{ matrix.name }}.tar.gz
            ${{ matrix.name }}.zip
          retention-days: 90
          if-no-files-found: ignore

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: latest
          name: Latest Build (main branch)
          draft: false
          prerelease: true
          body: |
            ## azst Latest Build

            **Automated build from the `main` branch.**

            **Built from commit:** ${{ github.sha }}
            **Date:** ${{ github.event.head_commit.timestamp }}

            ### Installation

            ```bash
            curl -sSL https://raw.githubusercontent.com/${{ github.repository }}/main/install.sh | bash
            ```

            Or download the binary for your platform below.
          files: |
            ${{ matrix.name }}.tar.gz
            ${{ matrix.name }}.zip
